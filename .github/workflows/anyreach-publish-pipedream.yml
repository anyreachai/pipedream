name: Publish Actions to Pipedream

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
      - main
      - research

jobs:
  publish-actions:
    runs-on: ubuntu-latest
    environment: ${{ github.event.pull_request.base.ref == 'main' && github.event.pull_request.merged == true && 'prod' || 'dev' }} 
    # Only run on merge events or PR validation (not closed without merge)
    if: github.event.action != 'closed' || github.event.pull_request.merged == true
    # Tell the CLI exactly where to find your config
    env:
      XDG_CONFIG_HOME: ${{ github.workspace }}/.config
      PIPEDREAM_API_KEY: ${{ secrets.PIPEDREAM_API_KEY }}
      PIPEDREAM_ORG_ID: ${{ vars.PIPEDREAM_ORG_ID }}

    steps:
      # Does a full clone of the repo to compare changes between 2 commits
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Pipedream CLI
        run: |
          curl https://cli.pipedream.com/install | sh
          echo "$HOME/.pipedream/bin" >> "$GITHUB_PATH"
      
      # Configures the Pipedream CLI to use the correct API key and org_id
      - name: Configure Pipedream CLI Profile
        run: |
          # Create the directory the CLI actually reads
          mkdir -p "$XDG_CONFIG_HOME/pipedream"                  
          
          # Write both api_key AND org_id from your secrets
          cat <<EOF > "$XDG_CONFIG_HOME/pipedream/config"
          [workspace]
          api_key = $PIPEDREAM_API_KEY
          org_id = $PIPEDREAM_ORG_ID
          EOF                

      - name: Verify Authentication
        run: |
          # Test authentication without interactive prompts
          # Set timeout to prevent hanging and capture output
          timeout 30s pd list components --profile workspace || {
            echo "❌ Authentication failed!"
            echo "The Pipedream CLI could not authenticate with the provided credentials."
            echo "Please check that PIPEDREAM_API_KEY and PIPEDREAM_ORG_ID are correctly set in the repository secrets/variables."
            echo "Current environment:"
            echo "  - PIPEDREAM_ORG_ID: $PIPEDREAM_ORG_ID"
            echo "  - API Key present: $([[ -n "$PIPEDREAM_API_KEY" ]] && echo "✓" || echo "✗")"
            exit 1
          }
          echo "✅ Authentication successful"

      - name: Diff & Process Components
        env:
          PROFILE: workspace
          # Dry‐run on PRs that haven't merged yet
          DRY_RUN: ${{ github.event.action != 'closed' || github.event.pull_request.merged != true }}
          BASE_REF: ${{ github.event.pull_request.base.sha }}
          HEAD_REF: ${{ github.event.pull_request.head.sha }}
        run: |
          chmod +x scripts/anyreach-pd-change-handler.sh
          ./scripts/anyreach-pd-change-handler.sh \
            --base "${BASE_REF}" \
            --head "${HEAD_REF}" \
            $( [[ "$DRY_RUN" == 'true' ]] && echo "--dry-run" )
